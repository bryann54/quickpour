plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dev.flutter.flutter-plugin-loader'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// Modified .env file loading with correct path
def dotenv = new Properties()
try {
    def envFile = new File("${project.rootDir.parentFile}/.env")
    if (envFile.exists()) {
        dotenv.load(new FileInputStream(envFile))
    } else {
        throw new GradleException(".env file not found at ${envFile.absolutePath}")
    }
} catch (Exception ex) {
    throw new GradleException("Error loading .env file: ${ex.message}")
}

android {
    namespace "com.example.chupachap"
    compileSdkVersion 33
    targetSdkVersion 33


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.chupachap"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        
        buildConfigField "String", "MAPS_API_KEY", "\"${dotenv['GOOGLE_MAPS_API_KEY_ANDROID']}\""
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }
}

dependencies {
    implementation "androidx.core:core-ktx:1.9.0"
}


flutter {
    source '../..'
}